cbuffer LightBuffer
{
    float4 ambientColor;
    float4 diffuseColor;
    float3 lightDirection;
	float pading;
};

Texture2D ObjTexture;
SamplerState ObjSamplerState;

struct PixelInputType
{
    float4 pos : SV_POSITION;
    float2 tex : TEXCOORD;
	float3 normal : NORMAL;	
};

float4 PS(PixelInputType input) : SV_TARGET
{
	float4 textureColor = ObjTexture.Sample(ObjSamplerState, input.tex);
	float3 lightDir = -lightDirection;
	float lightIntensity = saturate(dot(input.normal, lightDir));
	float4 color = ambientColor;
	
	color += (diffuseColor * max(0, lightIntensity));
	
	color = saturate(color);

	color = color * textureColor;

    return color;
}